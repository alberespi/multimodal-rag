from pathlib import Path
import json, torch, argparse
from typing import List, Dict
from PIL import Image
from tqdm import tqdm

from src.embed import embed_text, embed_images

# ----------------------- EMBED DIRECTORY -----------------
def embed_directory(indir: Path, outfile: Path, *, batch_size: int = 32) -> None:
    """
    Vectorizes all pages of *indir* and writes the result in *outfile*

    Parameters
    ----------
    indir: Path
        Folder with the pais of page_XXX.json and page_XXX.png generated by ingest_pdf.
    outfile: Path
        Path of the .pt file that will contain {'vecs': tensor Nx1536, 'meta': list[dict]}.
    batch_size: int, default 32
        Batch size for the text. For the images -> batch_size//2.

    Returns
    -------
    None
    """
    assert indir.is_dir(), f"{indir} is not a folder"

    meta_files = sorted(indir.glob("*.json"))
    if not meta_files:
        raise ValueError(f"No JSON files found in {indir}")
    
    texts, images, metas: List[str] | List[Image.Image] | List[Dict] = [], [], []
