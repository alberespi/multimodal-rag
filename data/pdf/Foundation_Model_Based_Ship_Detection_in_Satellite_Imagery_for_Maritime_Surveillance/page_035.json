{
  "source": "Foundation_Model_Based_Ship_Detection_in_Satellite_Imagery_for_Maritime_Surveillance.pdf",
  "page": 35,
  "text": "Chapter 3\nMaterials & Methods\n3.1 Data & Pre-processing\n3.1.1 PlanetScope SuperDove Imagery\nThis project utilizes PlanetScope SuperDove satellite images, which provide ∼3m per\npixel resolution and multispectral data across 8 bands [61]. The standard bands include\nBlue, Green, Red and Near-Infrared (NIR), and the SuperDove generation adds\nfour additional bands: Coastal Blue, Green I, Yellow and Red Edge [61]. We\nobtained PlanetScope scenes as surface reflectance products, meaning the imagery had\nbeen atmospherically corrected to approximate true surface reflectance values. Such\ncorrection removes atmospheric effects and ensures radiometric consistency across im-\nages [62]. By using Planet’s surface reflectance data (e.g. the AnalyticMS SR 8-band\nproduct), we minimize illumination and atmospheric variability between scenes.\n3.1.2 Spectral band Selection\nOf the 8 available bands, we excluded the Green I (531nm) and Yellow (610nm) bands\nfrom our analysis, reducing the data to 6 spectral channels. The Green I and Yel-\nlow bands are unique to PlanetScope and have no direct equivalent in Sentinel-2 or\nother mainstream sensors, which complicates cross-sensor calibration [62]. Moreover,\nPlanet’s documentation notes that six out of the eight SuperDove bands are designed\nto be interoperable with Sentinel-2 bands [62]. by removing Green I and Yellow, we\nfocus on the core set of six well-calibrated bands (Coastal Blue, Blue, Green, Red,\nRed Edge, NIR ) that align with conventional multispectral channels. All images\nwere rechecked after band selection to ensure no data misalignment occurred.\n3.1.3 Cloud Masking and NoData Handling\nWe applied Planet’s quality masks (UDM2) to filter out unusable pixels (e.g. clouds\nor void areas), marking those as NoData. Consequently, each scene’s pixels are cat-\negorized as either valid data (with reflectance values) or NoData (masked). We used\nmasked array structures in Python to handle these, so that NoData values would not in-\nterfere with statistical computations. In particular, NoData pixels were ignored during\nnormalization and excluded from model training. Any pixel with no valid reflectance\n(or set to fill value 0) is treated as masked in subsequent processing.\n19",
  "image": "page_035.png"
}